//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.11.13 at 11:46:37 AM CST 
//


package com.mentor.capital.project;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "designbaseline",
    "designchanged",
    "attachment"
})
@XmlRootElement(name = "designchangeorder")
public class Designchangeorder {

    @XmlAttribute(name = "id", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    protected String id;
    @XmlAttribute(name = "designref")
    @XmlIDREF
    protected Object designref;
    @XmlAttribute(name = "designinfo")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String designinfo;
    @XmlAttribute(name = "parentid")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String parentid;
    @XmlAttribute(name = "baseid")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String baseid;
    protected Designbaseline designbaseline;
    protected Designchanged designchanged;
    protected List<Attachment> attachment;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the designref property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getDesignref() {
        return designref;
    }

    /**
     * Sets the value of the designref property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setDesignref(Object value) {
        this.designref = value;
    }

    /**
     * Gets the value of the designinfo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDesigninfo() {
        return designinfo;
    }

    /**
     * Sets the value of the designinfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDesigninfo(String value) {
        this.designinfo = value;
    }

    /**
     * Gets the value of the parentid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getParentid() {
        return parentid;
    }

    /**
     * Sets the value of the parentid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setParentid(String value) {
        this.parentid = value;
    }

    /**
     * Gets the value of the baseid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBaseid() {
        return baseid;
    }

    /**
     * Sets the value of the baseid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBaseid(String value) {
        this.baseid = value;
    }

    /**
     * Gets the value of the designbaseline property.
     * 
     * @return
     *     possible object is
     *     {@link Designbaseline }
     *     
     */
    public Designbaseline getDesignbaseline() {
        return designbaseline;
    }

    /**
     * Sets the value of the designbaseline property.
     * 
     * @param value
     *     allowed object is
     *     {@link Designbaseline }
     *     
     */
    public void setDesignbaseline(Designbaseline value) {
        this.designbaseline = value;
    }

    /**
     * Gets the value of the designchanged property.
     * 
     * @return
     *     possible object is
     *     {@link Designchanged }
     *     
     */
    public Designchanged getDesignchanged() {
        return designchanged;
    }

    /**
     * Sets the value of the designchanged property.
     * 
     * @param value
     *     allowed object is
     *     {@link Designchanged }
     *     
     */
    public void setDesignchanged(Designchanged value) {
        this.designchanged = value;
    }

    /**
     * Gets the value of the attachment property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attachment property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttachment().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Attachment }
     * 
     * 
     */
    public List<Attachment> getAttachment() {
        if (attachment == null) {
            attachment = new ArrayList<Attachment>();
        }
        return this.attachment;
    }

}
