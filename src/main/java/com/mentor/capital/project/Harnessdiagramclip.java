//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.11.13 at 11:46:37 AM CST 
//


package com.mentor.capital.project;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "symboldata",
    "additionalcomponenttabledata",
    "positiontabledata",
    "dynamictabledata",
    "propertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe",
    "redsymboldata"
})
@XmlRootElement(name = "harnessdiagramclip")
public class Harnessdiagramclip {

    @XmlAttribute(name = "id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    protected String id;
    @XmlAttribute(name = "connref", required = true)
    @XmlIDREF
    protected Object connref;
    @XmlAttribute(name = "width")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String width;
    @XmlAttribute(name = "visibility")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String visibility;
    @XmlAttribute(name = "verticalFlip")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String verticalFlip;
    @XmlAttribute(name = "horizontalFlip")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String horizontalFlip;
    @XmlAttribute(name = "orientation")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String orientation;
    @XmlAttribute(name = "layernum")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String layernum;
    @XmlAttribute(name = "attributeref")
    @XmlIDREF
    protected Object attributeref;
    @XmlAttribute(name = "viewfromdirectionangleapplied")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String viewfromdirectionangleapplied;
    protected Symboldata symboldata;
    protected Additionalcomponenttabledata additionalcomponenttabledata;
    protected Positiontabledata positiontabledata;
    protected List<Dynamictabledata> dynamictabledata;
    @XmlElements({
        @XmlElement(name = "propertiedgraphic", type = Propertiedgraphic.class),
        @XmlElement(name = "attributetext", type = Attributetext.class),
        @XmlElement(name = "diagramtext", type = Diagramtext.class),
        @XmlElement(name = "compositetext", type = Compositetext.class),
        @XmlElement(name = "xreftextcontainer", type = Xreftextcontainer.class),
        @XmlElement(name = "proptext", type = Proptext.class),
        @XmlElement(name = "arc", type = Arc.class),
        @XmlElement(name = "circle", type = Circle.class),
        @XmlElement(name = "comment", type = Comment.class),
        @XmlElement(name = "curve", type = Curve.class),
        @XmlElement(name = "image", type = Image.class),
        @XmlElement(name = "gfxgroup", type = Gfxgroup.class),
        @XmlElement(name = "line", type = Line.class),
        @XmlElement(name = "polygon", type = Polygon.class),
        @XmlElement(name = "polyline", type = Polyline.class),
        @XmlElement(name = "propertiedtext", type = Propertiedtext.class),
        @XmlElement(name = "rectangle", type = Rectangle.class),
        @XmlElement(name = "widtharc", type = Widtharc.class),
        @XmlElement(name = "table", type = Table.class),
        @XmlElement(name = "tablegroup", type = Tablegroup.class),
        @XmlElement(name = "styleframe", type = Styleframe.class),
        @XmlElement(name = "unconstrainedstyleframe", type = Unconstrainedstyleframe.class)
    })
    protected List<Object> propertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe;
    protected Redsymboldata redsymboldata;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the connref property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getConnref() {
        return connref;
    }

    /**
     * Sets the value of the connref property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setConnref(Object value) {
        this.connref = value;
    }

    /**
     * Gets the value of the width property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWidth() {
        if (width == null) {
            return "0";
        } else {
            return width;
        }
    }

    /**
     * Sets the value of the width property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWidth(String value) {
        this.width = value;
    }

    /**
     * Gets the value of the visibility property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVisibility() {
        if (visibility == null) {
            return "true";
        } else {
            return visibility;
        }
    }

    /**
     * Sets the value of the visibility property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVisibility(String value) {
        this.visibility = value;
    }

    /**
     * Gets the value of the verticalFlip property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVerticalFlip() {
        if (verticalFlip == null) {
            return "false";
        } else {
            return verticalFlip;
        }
    }

    /**
     * Sets the value of the verticalFlip property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVerticalFlip(String value) {
        this.verticalFlip = value;
    }

    /**
     * Gets the value of the horizontalFlip property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHorizontalFlip() {
        if (horizontalFlip == null) {
            return "false";
        } else {
            return horizontalFlip;
        }
    }

    /**
     * Sets the value of the horizontalFlip property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalFlip(String value) {
        this.horizontalFlip = value;
    }

    /**
     * Gets the value of the orientation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOrientation() {
        if (orientation == null) {
            return "false";
        } else {
            return orientation;
        }
    }

    /**
     * Sets the value of the orientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrientation(String value) {
        this.orientation = value;
    }

    /**
     * Gets the value of the layernum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLayernum() {
        return layernum;
    }

    /**
     * Sets the value of the layernum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLayernum(String value) {
        this.layernum = value;
    }

    /**
     * Gets the value of the attributeref property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getAttributeref() {
        return attributeref;
    }

    /**
     * Sets the value of the attributeref property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setAttributeref(Object value) {
        this.attributeref = value;
    }

    /**
     * Gets the value of the viewfromdirectionangleapplied property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getViewfromdirectionangleapplied() {
        if (viewfromdirectionangleapplied == null) {
            return "false";
        } else {
            return viewfromdirectionangleapplied;
        }
    }

    /**
     * Sets the value of the viewfromdirectionangleapplied property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setViewfromdirectionangleapplied(String value) {
        this.viewfromdirectionangleapplied = value;
    }

    /**
     * Gets the value of the symboldata property.
     * 
     * @return
     *     possible object is
     *     {@link Symboldata }
     *     
     */
    public Symboldata getSymboldata() {
        return symboldata;
    }

    /**
     * Sets the value of the symboldata property.
     * 
     * @param value
     *     allowed object is
     *     {@link Symboldata }
     *     
     */
    public void setSymboldata(Symboldata value) {
        this.symboldata = value;
    }

    /**
     * Gets the value of the additionalcomponenttabledata property.
     * 
     * @return
     *     possible object is
     *     {@link Additionalcomponenttabledata }
     *     
     */
    public Additionalcomponenttabledata getAdditionalcomponenttabledata() {
        return additionalcomponenttabledata;
    }

    /**
     * Sets the value of the additionalcomponenttabledata property.
     * 
     * @param value
     *     allowed object is
     *     {@link Additionalcomponenttabledata }
     *     
     */
    public void setAdditionalcomponenttabledata(Additionalcomponenttabledata value) {
        this.additionalcomponenttabledata = value;
    }

    /**
     * Gets the value of the positiontabledata property.
     * 
     * @return
     *     possible object is
     *     {@link Positiontabledata }
     *     
     */
    public Positiontabledata getPositiontabledata() {
        return positiontabledata;
    }

    /**
     * Sets the value of the positiontabledata property.
     * 
     * @param value
     *     allowed object is
     *     {@link Positiontabledata }
     *     
     */
    public void setPositiontabledata(Positiontabledata value) {
        this.positiontabledata = value;
    }

    /**
     * Gets the value of the dynamictabledata property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dynamictabledata property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDynamictabledata().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Dynamictabledata }
     * 
     * 
     */
    public List<Dynamictabledata> getDynamictabledata() {
        if (dynamictabledata == null) {
            dynamictabledata = new ArrayList<Dynamictabledata>();
        }
        return this.dynamictabledata;
    }

    /**
     * Gets the value of the propertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the propertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPropertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Propertiedgraphic }
     * {@link Attributetext }
     * {@link Diagramtext }
     * {@link Compositetext }
     * {@link Xreftextcontainer }
     * {@link Proptext }
     * {@link Arc }
     * {@link Circle }
     * {@link Comment }
     * {@link Curve }
     * {@link Image }
     * {@link Gfxgroup }
     * {@link Line }
     * {@link Polygon }
     * {@link Polyline }
     * {@link Propertiedtext }
     * {@link Rectangle }
     * {@link Widtharc }
     * {@link Table }
     * {@link Tablegroup }
     * {@link Styleframe }
     * {@link Unconstrainedstyleframe }
     * 
     * 
     */
    public List<Object> getPropertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe() {
        if (propertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe == null) {
            propertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe = new ArrayList<Object>();
        }
        return this.propertiedgraphicOrAttributetextOrDiagramtextOrCompositetextOrXreftextcontainerOrProptextOrArcOrCircleOrCommentOrCurveOrImageOrGfxgroupOrLineOrPolygonOrPolylineOrPropertiedtextOrRectangleOrWidtharcOrTableOrTablegroupOrStyleframeOrUnconstrainedstyleframe;
    }

    /**
     * Gets the value of the redsymboldata property.
     * 
     * @return
     *     possible object is
     *     {@link Redsymboldata }
     *     
     */
    public Redsymboldata getRedsymboldata() {
        return redsymboldata;
    }

    /**
     * Sets the value of the redsymboldata property.
     * 
     * @param value
     *     allowed object is
     *     {@link Redsymboldata }
     *     
     */
    public void setRedsymboldata(Redsymboldata value) {
        this.redsymboldata = value;
    }

}
